{"version":3,"file":"static/webpack/static/development/pages/index.js.37031e43fd2e537f985c.hot-update.js","sources":["webpack:///./components/registro.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './registro.scss';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch'\nimport Logo from './logo';\nimport { Button, Alert } from 'reactstrap';\nimport { validateEmail, validateEmpty } from './utils/functions';\nimport Cleave from 'cleave.js/react';\nimport Spinner from './spinner';\nimport Success from './success';\nimport Fail from './fail';\n\nconst RegistroContainer = ({ children }) => (\n  <div className=\"container_registro\">\n    <div className=\"header\">\n      <Logo color=\"#669f09\" logoWidth=\"30px\" fontSize=\"1.2rem\" />\n    </div>\n    <div className=\"body\">\n      {children}\n    </div>\n  </div>\n);\n\nconst Input = ({\n  id,\n  type, \n  placeholder,\n  alert,\n  alertText,\n  label,\n  labelText,\n  value,\n  onBlur,\n  onFocus,\n  onChange\n}) => (\n  <div className=\"input_cont\">\n    {\n      label && <label id={`${id}Label`} htmlFor={id}>{labelText}</label>\n    }\n    <input\n      value={value}\n      id={id}\n      name={id}\n      type={type}\n      placeholder={placeholder}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      onChange={onChange}\n    />\n    {\n      alert && <Alert id={`${id}Alert`}>{alertText}</Alert>\n    }\n  </div>\n);\n\nconst InputDate = ({\n  value,\n  onChange,\n  onFocus,\n}) => (\n  <div className=\"input_date_cont\">\n    <label>Cumpleaños</label>\n    <Cleave\n      onChange={onChange}\n      onFocus={onFocus}\n      value={value}\n      name=\"date\"\n      id=\"birthday\"\n      placeholder=\"DD/MM/YYYY\"\n      options={{ date: true, datePattern: ['d', 'm', 'Y'] }}\n    />\n  </div>\n);\n\nconst InputSelect = ({ onChange }) => (\n  <select onChange={onChange} id=\"genre\" className=\"my_select\">\n    <option defaultValue=\"indefinido\">Genero</option>\n    <option value=\"mujer\">Mujer</option>\n    <option value=\"hombre\">Hombre</option>\n    <option value=\"otro\">Otro</option>\n  </select>\n)\n\nconst PseudoRegistro = ({values, alerts, handlers, labels, onClick}) => (\n  <div className=\"innerContainer\">\n    <Input\n      value={values.mail}\n      id =\"mail\"\n      type=\"text\"\n      placeholder=\"Introduzca su direccion de correo\"\n      alert={alerts.mailAlert}\n      alertText=\"Su direccion de correo no es valida\"\n      label={labels.mailLabel}\n      labelText=\"Correo\"\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <Input\n      value={values.pass}\n      id =\"pass\"\n      type=\"password\"\n      placeholder=\"Contraseña\"\n      alert={alerts.passAlert}\n      alertText=\"Su contraseña no es valida\"\n      label={labels.passLabel}\n      labelText=\"Contraseña\"\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <Input\n      value={values.rePass}\n      id =\"rePass\"\n      type=\"password\"\n      placeholder=\"Repetir Contraseña\"\n      alert={alerts.rePassAlert}\n      alertText=\"No coincide\"\n      label={labels.rePassLabel}\n      labelText=\"Repetir contraseña\"\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <div className=\"footer\">\n      <Button onClick={onClick} outline color=\"primary\">Siguiente</Button>\n    </div>\n  </div>\n);\n\nconst Real = ({onSubmit, values, alerts, handlers, labels, onClick}) => (\n  <form method=\"POST\" onSubmit={onSubmit} className=\"innerContainer\">\n    <Input\n      value={values.name}\n      id =\"name\"\n      type=\"text\"\n      placeholder=\"Indique su nombre\"\n      alert={alerts.nameAlert}\n      alertText=\"Su nombre es requerido y no puede estar vacio\"\n      label={labels.nameLabel}\n      labelText=\"Nombre\"\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <Input\n      value={values.lastName}\n      id =\"lastName\"\n      type=\"text\"\n      placeholder=\"Indique su apellido\"\n      alert={alerts.lastNameAlert}\n      alertText=\"Su apellido es requerido y no puede estar vacio\"\n      label={labels.lastNameLabel}\n      labelText=\"Apellido\"\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <InputDate \n      value={values.birthday}\n      onBlur={handlers.onBlur}\n      onFocus={handlers.onFocus}\n      onChange={handlers.onChange}\n    />\n    <InputSelect\n      onChange={handlers.onChange}\n    />\n    <div className=\"footer\">\n      <Button type=\"submit\" outline color=\"primary\">Registrar</Button>\n    </div>\n  </form>\n)\n\nclass Registro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pseudo: true,\n      mail: '',\n      mailAlert: false,\n      mailLabel: false,\n      pass: '',\n      passAlert: false,\n      passLabel: false,\n      rePass: '',\n      rePassAlert: false,\n      rePassLabel: false,\n      real: false,\n      name: '',\n      nameAlert: false,\n      nameLabel: false,\n      lastName: '',\n      lastNameAlert: false,\n      lastNameLabel: false,\n      birthday:'',\n      birthdayAlert: false,\n      birthdayLabel: false,\n      genre: '',\n      spinner: false,\n      success: false,\n      successText: '',\n      fail: false,\n      failText: false,\n    }\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onValidate = this.onValidate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onBlur(e) {\n    const propLabel = `${e.target.id}Label`;\n    this.setState({ [propLabel]: false });\n  }\n\n  onFocus(e) {\n    const propLabel = `${e.target.id}Label`;\n    const propAlert = `${e.target.id}Alert`;\n    this.setState({ [propLabel]: true, [propAlert]: false });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n\n  onValidate() {\n    const {\n      mail,\n      pass,\n      rePass,\n    } = this.state;\n\n    if (!validateEmail(mail)) {\n      this.setState({ mailAlert: true });\n    } else if (!validateEmpty(pass)) {\n      this.setState({ passAlert: true });\n    } else if (!validateEmpty(rePass) || rePass !== pass) {\n      this.setState({ rePassAlert: true });\n    } else {\n      this.setState({ pseudo: false, real: true });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      mail,\n      pass,\n      name,\n      lastName,\n      birthday,\n      genre,\n    } = this.state\n    if (!validateEmpty(name)) {\n      this.setState({ nameAlert: true });\n    } else if (!validateEmpty(lastName)) {\n      this.setState({ lastNameAlert: true });\n    } else if (!validateEmpty(birthday)){\n      this.setState({ birthday: '31/12/1970' });\n    } else if(!validateEmpty(genre)){\n      this.setState({ genero: 'indefinido' });\n    } else {\n      const data = {\n        mail: mail,\n        pass, pass,\n        name: name,\n        lastName: lastName,\n        birthday: birthday,\n        genero: genre,\n      };\n      this.setState({ spinner: true, real: false });\n      fetch('https://express-apis-qgtzxppd7.now.sh/foo', {\n        mode:'cors',\n      })\n        .then(res => res.text())\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n      }\n      /*fetch('/login', {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data),\n      })\n        .then(res => {\n          if (res.status === 200) {\n            res.text()\n              .then(resp => {\n                this.setState({ spinner: false, success: true, successText: `${resp} agregado con exito` });\n                setTimeout(() => {\n                  this.setState({ pseudo: true, success: false, successText: '' });\n                  window.location=\"/perfil\";\n                }, 3000);\n              });\n          } else {\n            res.text()\n              .then(resp => {\n                this.setState({ spinner: false, fail: true, failText: `${resp} ya existe, intente de nuevo` });\n                setTimeout(() => {\n                  this.setState({ pseudo: true, fail: false, failText: '' });\n                }, 3000);\n              })\n          }\n        })\n        .catch(err => console.log(err));\n    }*/\n  }\n\n  render() {\n    const {\n      pseudo,\n      mail,\n      mailAlert,\n      mailLabel,\n      pass,\n      passAlert,\n      passLabel,\n      rePass,\n      rePassAlert,\n      rePassLabel,\n      real,\n      name,\n      nameAlert,\n      nameLabel,\n      lastName,\n      lastNameAlert,\n      lastNameLabel,\n      birthday,\n      birthdayAlert,\n      birthdayLabel,\n      spinner,\n      success,\n      successText,\n      fail,\n      failText,\n    } = this.state;\n    return(\n      <RegistroContainer>\n        {\n          pseudo && (\n            <PseudoRegistro\n              onClick={this.onValidate}\n              values={\n                {\n                  mail,\n                  pass,\n                  rePass,\n                }\n              }\n              handlers={\n                {\n                  onBlur: this.onBlur,\n                  onFocus: this.onFocus,\n                  onChange: this.onChange,\n                }\n              }\n              alerts={\n                {\n                  mailAlert,\n                  passAlert,\n                  rePassAlert,\n                }\n              }\n              labels={\n                {\n                  mailLabel,\n                  passLabel,\n                  rePassLabel,\n                }\n              }\n            />\n          )\n        }\n        {\n          real && (\n            <Real\n              onSubmit={this.onSubmit}\n              values={\n                {\n                  name,\n                  lastName,\n                  birthday\n                }\n              }\n              handlers={\n                {\n                  onBlur: this.onBlur,\n                  onFocus: this.onFocus,\n                  onChange: this.onChange,\n                }\n              }\n              alerts={\n                {\n                  nameAlert,\n                  lastNameAlert,\n                  birthdayAlert,\n                }\n              }\n              labels={\n                {\n                  nameLabel,\n                  lastNameLabel,\n                  birthdayLabel,\n                }\n              }\n            />\n          )\n        }\n        {\n          spinner && <Spinner />\n        }\n        {\n          success && <Success text={successText} />\n        }\n        {\n          fail && <Fail text={failText} />\n        }\n      </RegistroContainer>\n    )\n  }\n}\n\nexport default Registro;\n"],"mappings":"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","sourceRoot":""}