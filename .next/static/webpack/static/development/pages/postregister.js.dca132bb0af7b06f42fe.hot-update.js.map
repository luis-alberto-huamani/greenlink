{"version":3,"file":"static/webpack/static/development/pages/postregister.js.dca132bb0af7b06f42fe.hot-update.js","sources":["webpack:///./components/body-post-register.jsx","webpack:///./pages/postregister.js"],"sourcesContent":["import './body-post-register.scss';\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nclass BodyPostRegister extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      imgSrc: null,\n      preview: false,\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend= () => {\n      this.setState({ imgSrc: reader.result });\n    }\n    if (img) {\n      this.setState({ imgSrc: reader.readAsDataURL(img) })\n    } else {\n      this.setState({ imgSrc: null });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { imgSrc } = this.state;\n    const reqId = this.props.id;\n    const data = {\n      img: imgSrc,\n      id: reqId,\n    }\n    const options = {\n      headers: { \"Content-Type\": \"application/json\" },\n      mode: \"cors\",\n      body: JSON.stringify(data),\n      method: \"POST\"\n    }\n    fetch('/api/postregister.js', options)\n      .then((res) => {\n        if (res.ok) {\n          res.text()\n            .then((res) => {\n              window.location=`/perfil?id=${res}`;\n            })\n        } else {\n          res.text()\n            .then(res => console.log(res));\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return(\n      <section className=\"post_register_main_cont shadow\">\n        <div className=\"header_postr\">\n          <div className=\"steps_cont\">\n            <p className=\"step_active\">1</p>\n            <svg height=\"5\" widths=\"100%\"><line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/></svg>\n            <p className=\"step_inactive\">2</p>\n            <svg height=\"5\" widths=\"100%\"><line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/></svg>\n            <p className=\"step_inactive\">3</p>\n          </div>\n        </div>\n        <div className=\"body_postr\">\n        <form onSubmit={this.onSubmit} method=\"POST\">\n          <label htmlFor=\"perfilImg\">\n          {\n            this.state.imgSrc && <img src={this.state.imgSrc} alt= \"preview\" />\n          }\n          <div className=\"image_box\">\n            <p>Elige una imagen de perfil</p>\n          </div>\n              <input onChange={this.onChange} id=\"perfilImg\" name=\"perfilImg\" type=\"file\"/>\n              {console.log(typeof this.state.imgSrc)}\n          </label>\n          <Button type=\"submit\" outline>Siguiente</Button>\n          </form>\n        </div>\n        <div className=\"footer_postr\">\n          \n        </div>\n      </section>\n    )\n  }\n};\n\nexport default BodyPostRegister;\n","import Layout from '../components/layout';\nimport BodyPostRegister from '../components/body-post-register';\n\nconst App = props => (\n  <Layout>\n    <BodyPostRegister id={props.id} />\n  </Layout>\n);\n\napplicationCache.getInitialProps = ({ query }) => {\n  const id = query.id;\n  return { id };\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AArFA;AACA;AAqFA;AAEA;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}