{"version":3,"file":"static/webpack/static/development/pages/perfil.js.64393ac3931777baa91d.hot-update.js","sources":["webpack:///./components/perfil-nav.jsx","webpack:///./pages/perfil.js"],"sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport fetch from 'isomorphic-unfetch';\nimport CardPost from './card-post/card-post';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Card,\n  CardBody,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport AddPost from './add-post';\nimport './perfil-nav.scss';\n\nclass PerfilNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      text: '',\n      imgUrl: null,\n      posts:[],\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onChangeImg = this.onChangeImg.bind(this);\n    this.addPost = this.addPost.bind(this);\n  }\n\n  componentDidMount() {\n    const { posts } = this.props;\n    this.setState({ posts: posts });\n    console.log(posts);\n  }\n\n  onToggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n  onChangeText(e) {\n    this.setState({ text: e.target.value });\n  }\n  onChangeImg(e) {\n    console.log('foo')\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend= () => {\n      this.setState({ imgUrl: reader.result });\n    }\n    if (img) {\n      this.setState({ imgUrl: reader.readAsDataURL(img) });\n    } else {\n      this.setState({ imgUrl: null });\n    }\n  }\n\n  addPost(e) {\n    e.preventDefault()\n    const date = new Date().toLocaleDateString('es-ES', { year: 'numeric', month: 'numeric', day:'numeric' });\n    const { text, posts, imgUrl } = this.state;\n    const { id } = this.props;\n    const newPost = { text, date, imgUrl };\n    const data = {\n      id: id,\n      text: text,\n      date: date,\n      img: imgUrl ? imgUrl : '',\n    }\n    fetch('/api/newPost.js', {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if(res.status === 200) {\n          this.setState({ text: '', imgUrl: null, posts: [...posts, newPost] });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  render() {\n    const {\n      activeTab,\n      text,\n      imgUrl,\n    } = this.state;\n    const { posts } = this.props;\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1', nav_item: this.state.activeTab !== '1'  })}\n              onClick={()=>{this.onToggle('1')}}\n            >\n              Muro\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2', nav_item: this.state.activeTab !== '2'  })}\n              onClick={()=>{this.onToggle('2')}}\n            >\n              Historia\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3', nav_item: this.state.activeTab !== '3'  })}\n              onClick={()=>{this.onToggle('3')}}\n            >\n              Amigos\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4', nav_item: this.state.activeTab !== '4'  })}\n              onClick={()=>{this.onToggle('4')}}\n            >\n              Deseos\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab} >\n          <TabPane tabId='1'>\n            <Row>\n              <Col sm=\"12\">\n                <AddPost\n                  value={text}\n                  onChangeText={this.onChangeText}\n                  img={imgUrl}\n                  onChangeImg={this.onChangeImg}\n                  onSubmit={this.addPost}\n                />\n                <div className=\"line\" />\n              </Col>\n            </Row>\n            <Row>\n              {\n                posts.map((post) => (\n                  <Col key={uuid()} sm=\"12\">\n                    <CardPost post={post}  />\n                  </Col>\n                ))\n              }\n            </Row>\n          </TabPane>\n          <TabPane tabId='2'>\n            <Row>\n              <Col sm=\"12\">\n                <h2>Tab 2</h2>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='3'>\n            <Row>\n              <Col sm=\"12\">\n                <h2>Tab 3</h2>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='4'>\n            <Row>\n              <Col sm=\"12\">\n                <h2>Tab 4</h2>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n};\n\nexport default PerfilNav;\n","import Head from 'next/head';\nimport Layout from '../components/layout';\nimport Perfil from '../components/perfil';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst App = (props) => (\n  <div>\n    <Head>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta charSet=\"utf-8\" />\n    </Head>\n    <Layout>\n      {<Perfil user={props.user} id={props.id} />}\n    </Layout>\n  </div>\n);\n\nApp.getInitialProps = async ({ query }) => {\n  const id = query.id;\n  const data = {\n    reqid: id,\n  }\n  const res = await fetch(\"https://greenlink-project.now.sh/api/perfil\",{\n    headers: { \"Content-Type\": \"application/json\" },\n    method: \"POST\",\n    body: JSON.stringify(data),\n  });\n  const user = await res.json();\n  return { user, id };\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAlKA;AACA;AAkKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxaA;;;;A","sourceRoot":""}